{
  "_args": [
    [
      {
        "raw": "gulp-phpspec@^0.5.3",
        "scope": null,
        "escapedName": "gulp-phpspec",
        "name": "gulp-phpspec",
        "rawSpec": "^0.5.3",
        "spec": ">=0.5.3 <0.6.0",
        "type": "range"
      },
      "/home/victor/Documents/Sistema de Gerenciamento/node_modules/laravel-elixir"
    ]
  ],
  "_from": "gulp-phpspec@>=0.5.3 <0.6.0",
  "_id": "gulp-phpspec@0.5.5",
  "_inCache": true,
  "_location": "/gulp-phpspec",
  "_nodeVersion": "6.8.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/gulp-phpspec-0.5.5.tgz_1484961685225_0.9298848859034479"
  },
  "_npmUser": {
    "name": "codedungeon",
    "email": "codedungeon@gmail.com"
  },
  "_npmVersion": "4.0.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gulp-phpspec@^0.5.3",
    "scope": null,
    "escapedName": "gulp-phpspec",
    "name": "gulp-phpspec",
    "rawSpec": "^0.5.3",
    "spec": ">=0.5.3 <0.6.0",
    "type": "range"
  },
  "_requiredBy": [
    "/laravel-elixir"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-phpspec/-/gulp-phpspec-0.5.5.tgz",
  "_shasum": "b01c8d9fc322750b4ea3c40ed4e10c91e7c47c91",
  "_shrinkwrap": null,
  "_spec": "gulp-phpspec@^0.5.3",
  "_where": "/home/victor/Documents/Sistema de Gerenciamento/node_modules/laravel-elixir",
  "author": {
    "name": "Mike Erickson",
    "email": "codedungeon@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/mikeerickson/gulp-phpspec/issues"
  },
  "dependencies": {
    "chalk": "1.1.3",
    "gulp-util": "3.0.8",
    "lodash": "^3.8.0",
    "map-stream": "0.0.6"
  },
  "description": "PHP PHPSpec plugin for Gulp",
  "devDependencies": {
    "chai": "3.5.0",
    "expect": "1.20.2",
    "gulp": "3.9.1",
    "gulp-jshint": "2.0.4",
    "gulp-logger": "0.0.2",
    "gulp-notify": "2.2.0",
    "gulp-shell": "0.5.2",
    "gulp-todo": "5.2.0",
    "jshint": "2.9.4",
    "jshint-stylish": "2.2.1",
    "mocha": "3.2.0",
    "should": "11.1.2"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "b01c8d9fc322750b4ea3c40ed4e10c91e7c47c91",
    "tarball": "https://registry.npmjs.org/gulp-phpspec/-/gulp-phpspec-0.5.5.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "gitHead": "72080404dd36c383bd4b943d205385bf2c38482f",
  "homepage": "https://github.com/mikeerickson/gulp-phpspec",
  "keywords": [
    "gulpplugin",
    "phpspec"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "codedungeon",
      "email": "codedungeon@gmail.com"
    }
  ],
  "name": "gulp-phpspec",
  "optionalDependencies": {},
  "readme": "# gulp-phpspec\n> PHPSpec plugin for gulp 3\n\n## Usage\n\nFirst, install `gulp-phpspec` as a development dependency:\n\n```shell\nnpm install --save-dev gulp-phpspec\n```\n\nThen, add it to your `gulpfile.js`:\n\n```javascript\nvar phpspec = require('gulp-phpspec');\n\n// option 1: default format\ngulp.task('phpspec', function() {\n\tgulp.src('phpsec.yml').pipe(phpspec());\n});\n\n// option 2: with defined bin and options\ngulp.task('phpspec', function() {\n\tvar options = {debug: false};\n\tgulp.src('phpspec.yml').pipe(phpspec('./vendor/bin/phpspec run',options));\n});\n\n// option 3: supply callback to integrate something like notification (using gulp-notify)\n\nvar gulp = require('gulp'),\n notify  = require('gulp-notify'),\n phpspec = require('gulp-phpspec'),\n _       = require('lodash');\n\n  gulp.task('phpspec', function() {\n    gulp.src('phpspec.yml')\n      .pipe(phpspec('', {notify: true}))\n      .on('error', notify.onError(testNotification('fail', 'phpspec')))\n      .pipe(notify(testNotification('pass', 'phpspec')));\n  });\n\nfunction testNotification(status, pluginName, override) {\n\tvar options = {\n\t\ttitle:   ( status == 'pass' ) ? 'Tests Passed' : 'Tests Failed',\n\t\tmessage: ( status == 'pass' ) ? '\\n\\nAll tests have passed!\\n\\n' : '\\n\\nOne or more tests failed...\\n\\n',\n\t\ticon:    __dirname + '/node_modules/gulp-' + pluginName +'/assets/test-' + status + '.png'\n\t};\n\toptions = _.merge(options, override);\n  return options;\n}\n\n```\n\n### Sample Gulpfile\n\nIf you want a quick and dirty gulpfile, here is one I created for testing this plugin\n\n[Gist: https://gist.github.com/mikeerickson/9163621](https://gist.github.com/mikeerickson/9163621)\n\n\n## API\n\n### (phpspecpath,options,cb)\n\n#### phpspecpath\n\nType: `String`\n\nThe path to the desired PHPSpec binary\n- If not supplied, the defeault path will be ./vendor/bin/phpspec\n\n#### options.debug\nType: `Boolean (Default: false)`\n\nEmit error details and shows command used in console\n\n#### options.clear\nType: `Boolean (Default: false)`\n\nClear console before executing command\n\n\n#### options.notify\nType: `Boolean (Default: false)`\n\nCall user supplied callback to handle notification (use gulp-notify)\n\n#### options.verbose\nType: `String (Default null)`\n\nAdjust the default verbosity of messages\nv|vv|vvv Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug\n\n#### options.noInteraction\nType: `Boolean (Default: false)`\n*Note: changed from noInteract -* __0.3.0__\n\nDo not ask any interactive question (disables code generation).\n\n#### options.noAnsi\nType: `Boolean (Default: false)`\n\nDisable ANSI output (ommiting parameter or setting to false will display ansi colors output)\n\n#### options.quiet\nType: `Boolean (Default: false)`\n\nDo not output any message.\n\n#### options.formatter\nType: `String`\n\nDisplay PHPSpec custom formatters (ie pretty)\n\n\n## Credits\n\ngulp-phpspec written by Mike Erickson\n\nE-Mail: [codedungeon@gmail.com](mailto:codedungeon@gmail.com)\n\nTwitter: [@codedungeon](http://twitter.com/codedungeon)\n\nWebiste: [codedungeon.org](http://codedungeon.org)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mikeerickson/gulp-phpspec.git"
  },
  "scripts": {
    "build": "mocha --reporter=spec && jshint ./*.js && jshint ./test/*.js",
    "test": "mocha spec --reporter spec"
  },
  "version": "0.5.5"
}
